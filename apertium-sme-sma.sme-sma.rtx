! sme
! ^Mun<prn><pers><p1><sg><nom><@SUBJ→>/Mån<prn><pers><p1><sg><nom><@SUBJ→>$
! ^oaidnit<vblex><tv><indic><pres><p1><sg><@+FMAINV>/vuojnnet<vblex><tv><indic><pres><p1><sg><@+FMAINV>$
! ^don<prn><pers><p2><sg><gen><@→N>/dån<prn><pers><p2><sg><gen><@→N>$
! ^viellja<n><sem_hum><sg><acc><@←OBJ>/viellja<n><sem_hum><sg><acc><@←OBJ>$
! smj
! Mån vuojnáv vieljat.
! "<Mån>"
!	"mån" prn pers p1 sg nom
! "<vuojnáv>"
! 	"vuojnnet" vblex tv indic pres p1 sg @+FMAINV MAP:3256
! "<vieljat>"
!	"viellja" n sem_hum sg acc px2sg

sem = sem_hum sem_food ;
number = sg pl ;
case = acc nom gen loc ine ela ill ;
poss = ("" "") px1sg px1du px1pl px2sg px2du px2pl px3sg px3du px3pl ;
person = p1 p2 p3 ;
pron_type = pers refl dem indef recipr rel ;
attr = attr ;
transitivity = tv iv ;
mood = indic imp ;
qst = qst ;
tense = pres pret ;
np_type = ant cog ;
gender = m f ;
vform = inf conneg prfprc ;
neg = neg ;
person_number = "p1.sg" "p1.du" "p1.pl"
                "p2.sg" "p2.du" "p2.pl"
                "p3.sg" "p3.du" "p3.pl" ;

person_number > poss : "p1.sg" px1sg, "p1.du" px1du, "p1.pl" px1pl,
                       "p2.sg" px2sg, "p2.du" px2du, "p2.pl" px2pl,
                       "p3.sg" px3sg, "p3.du" px3du, "p3.pl" px3pl ;
! a rule for converting person+number tag pairs to possessive tags
! this applies if you write poss=1.person_number or 1.person_number>poss
! "" because these are pairs instead of single tags

case > case : loc ine ;

n: _.number.case.poss ;
np: _.np_type.gender.number.case ;
adj_attr: _.attr ;
adj_pred: _.number.case ;
adj: (if (1.attr = attr) 1(adj_attr)
      else 1(adj_pred)) ;
adv: _ ;
cnjcoo: _ ;
prn: _.pron_type.person.number.case ; ! mun<prn><pers><p1><sg><loc>
NP: _.number.case.poss.sem ;
! <vblex><tv><indic><pres><p3><pl>
vblex_fin: _.transitivity.neg.mood.tense.person.number ; ! neg usually empty
vblex_inf: _.transitivity.vform ;
vblex: (if (1.vform = "") 1(vblex_fin)
        else 1(vblex_inf)) ;
VP: _.mood.tense.vform ;
S: _ ;

p1_or_p2 = p1 p2 ;
NP -> prn.pers.[p1_or_p2].*.gen.$lemcase/sl %NP
      { %2[poss=1.person_number,lemcase=$lemcase]
       ! the following is equivalent
       ! 2[poss=(if (1.person = p1 and 1.number = sg) px1sg
       !         if (1.person = p1 and 1.number = du) px1du
       !         if (1.person = p1 and 1.number = pl) px1pl
       !         if (1.person = p2 and 1.number = sg) px2sg
       !         if (1.person = p2 and 1.number = du) px2du
       !         if (1.person = p2 and 1.number = pl) px2pl
       !         if (1.person = p3 and 1.number = sg) px3sg
       !         if (1.person = p3 and 1.number = du) px3du
       !         if (1.person = p3 and 1.number = pl) px3pl
       !        )]
      } ;
NP -> %n { %1[poss=$poss,lemcase=$lemcase] } ;
NP -> adj.attr.$lemcase/sl %NP { 1[lemcase=$lemcase] _ %2[poss=$poss] } ;
NP -> %NP cnjcoo NP { %1[lemcase=$lemcase] _ 2 _ 3[case=$case] } ;
NP -> %prn { 1[lemcase=$lemcase] } ;  ! % = NP får taggene fra pronomene
! Danielgo -> Daniel dïhte
NP -> %np { 1 (if (1.qst = qst) [ _ dïhte@pcle ]) } ;

VP -> %vblex.tv.$lemcase/sl NP !  hvis transitivt verb, kjør OV - verb + nomen
      {
        2[case=(if (2.number = pl and 2.case = acc) nom   ! case som er acc, blir nominativ hvis nummer er plural
                if (2.sem = sem_food and 2.case = loc) ela ! hvis sem_taggen er food og case er loc - gir output elativ.
                else 2.case), ! ellers gi samme case som er i input.
           lemcase=$lemcase]
        _ %1[lemcase=aa]
      } ;
VP -> NP %vblex.tv { 1 _ %2 } ; ! VO gir OV som output
VP -> %vblex.iv { %1 } ;
VP -> adv %VP { 1 _ %2 } ;

verb_ill_to_ine = aelkedh ;

! Mun álggán skuvlii   (sme: Ill)
! Manne skuvlesne aalkam  (sma: Ine)
VP -> %VP NP.*.ill { 2[case=(if (1.lem in_caseless verb_ill_to_ine) ine
                             else 2.case)]
                     _ %1 } ;

! In leat skuvlii vel álgán (sme: Ill)
! Im leah skuvlesne annje aalkeme. (sma: Ine)
VP -> NP.*.ill %VP { 1[case=(if (2.lem in_caseless verb_ill_to_ine) ine
                             else 1.case)]
                     _ %2 } ;

! AuxP: _ ;
! AuxP -> ii@vblex.iv.neg VP.*.conneg
!         { 1[tense=2.tense,mood=2.mood] _ 2[tense="",mood=""] } ;

! sme - Gánddas leat vieljat  - Mov leah vïellh
!       Gánddas lea viellja.  - Mov lea vïelle

S -> NP.*.loc leat@vblex.iv.indic NP { 1[case=gen] _ 2 _ 3 } ;

! Mun in boahtán. -> Idtjim manne båetieh.
S -> NP.*.nom.$lemcase ii@vblex.iv.neg VP.*.conneg
     { 2[tense=3.tense,mood=3.mood,lemcase=$lemcase]
       _ 1[lemcase=aa] _ 3[tense="",mood=""] } ;
