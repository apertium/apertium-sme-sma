<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="n-cmp">
      <cat-item tags="n.cmp"/>
      <cat-item tags="n.*.cmp"/>
      <cat-item tags="n.*.*.cmp"/>
      <cat-item tags="n.*.*.*.cmp"/>
      <cat-item tags="a.*.cmp"/>
      <cat-item tags="v.*.der_nomact.n.*.cmp"/>
      <cat-item tags="v.*.der_nomag.n.*.cmp"/>
    </def-cat>
    <def-cat n="n">
      <cat-item tags="n.*"/>
      <cat-item tags="v.*.der_nomact.n.*"/>
      <cat-item tags="v.*.der_nomag.n.*"/>
      <cat-item tags="a.der_vuohta.n.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="a.*"/>
    </def-cat>
    <def-cat n="adj-rdep">
      <cat-item tags="a.*.@→N"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num.*"/>
    </def-cat>
    <def-cat n="num-ldep">
      <cat-item tags="num.*.*.*.@N←"/>
    </def-cat>
    <def-cat n="pron-refl">
      <cat-item tags="pron.refl.*"/>
    </def-cat>
    <def-cat n="pron-rel">
      <cat-item tags="pron.rel.*"/>
    </def-cat>
    <def-cat n="pron-dem">
      <cat-item tags="pron.dem.*"/>
    </def-cat>
    <def-cat n="pron-indef">
      <cat-item tags="pron.indef.*"/>
    </def-cat>
    <def-cat n="pron-attr">
      <cat-item tags="pron.indef.attr"/>
      <cat-item tags="pron.indef.attr.*"/>
      <cat-item tags="pron.interr.attr.*"/>
    </def-cat>
    <def-cat n="verb-actio">
      <cat-item tags="v.*.actio.*"/>
    </def-cat>
    <def-cat n="pron-pers">
      <cat-item tags="pron.pers.*"/>
    </def-cat>
    <def-cat n="n-prop-pers">
      <cat-item tags="n.prop.mal.*"/>
      <cat-item tags="n.prop.fem.*"/>
    </def-cat>
    <def-cat n="verb-imprt">
      <cat-item tags="v.*.imprt.*"/>
    </def-cat>
    <def-cat n="verb-inf">
      <cat-item tags="v.*.inf.*"/>
      <cat-item tags="v.*.der_l.v.inf.*"/>
      <cat-item tags="v.*.der_d.v.inf.*"/>
      <cat-item tags="v.*.der_ahtti.v.inf.*"/>
      <cat-item tags="v.*.der_ahtti.v.*.inf.*"/>
      <cat-item tags="v.*.der_goahti.v.inf.*"/>
    </def-cat>
    <def-cat n="verb-prfprc">
      <cat-item tags="v.*.prfprc.*"/>
      <cat-item tags="v.*.der_goahti.v.prfprc.*"/>
      <cat-item tags="v.*.der_goahti.v.prfprc"/>
    </def-cat>
    <def-cat n="leat-fin">
      <cat-item lemma="leat" tags="v.*.ind.*"/>
      <cat-item lemma="leat" tags="v.*.cond.*"/>
      <cat-item lemma="leat" tags="v.*.pot.*"/>
    </def-cat>
    <def-cat n="ii">
      <cat-item lemma="ii" tags="v.iv.neg.*"/>
    </def-cat>
    <def-cat n="conneg">
      <cat-item tags="v.*.conneg.*"/>
      <cat-item tags="v.*.*.*.conneg.*"/>
    </def-cat>
    <def-cat n="verb-fin">
      <cat-item tags="v.*.ind.*"/>
      <cat-item tags="v.*.cond.*"/>
      <cat-item tags="v.*.pot.*"/>
      <cat-item tags="v.*.der_goahti.v.ind.*"/>
      <cat-item tags="v.*.der_goahti.v.cond.*"/>
      <cat-item tags="v.*.der_goahti.v.pot.*"/>
    </def-cat>
    <def-cat n="cc">
      <cat-item tags="cc"/>
      <cat-item tags="cc.*"/>
    </def-cat>
    <def-cat n="cs">
      <cat-item tags="cs"/>
      <cat-item tags="cs.*"/>
    </def-cat>
    <def-cat n="pr">
      <cat-item tags="pr"/>
      <cat-item tags="pr.*"/>
    </def-cat>
    <def-cat n="po">
      <cat-item tags="po"/>
      <cat-item tags="po.*"/>
    </def-cat>
    <def-cat n="adv">
      <cat-item tags="adv"/>
      <cat-item tags="adv.*"/>
      <cat-item tags="pcle"/>
      <cat-item tags="pcle.*"/>
      <cat-item tags="a.der_at.adv"/>
      <cat-item tags="a.der_at.adv.*"/>
      <cat-item tags="v.*.ger"/>
      <cat-item tags="v.*.ger.*"/>
      <cat-item tags="v.*.vgen"/>
      <cat-item tags="v.*.vgen.*"/>
      <cat-item tags="v.*.vabess"/>
      <cat-item tags="v.*.vabess.*"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="clb"/>
      <cat-item tags="clb.*"/>
    </def-cat>
  </section-def-cats>
  <section-def-attrs>
    <def-attr n="a_cmp">
      <attr-item tags="sgcmp"/>
      <attr-item tags="sgnomcmp"/>
      <attr-item tags="attr"/>
      <attr-item tags="sggencmp"/>
      <attr-item tags="plgencmp"/>
    </def-attr>

    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="v.iv.der_nomag.n"/>
      <attr-item tags="v.tv.der_nomag.n"/>
      <attr-item tags="v.iv.der_nomact.n"/>
      <attr-item tags="v.tv.der_nomact.n"/>
      <attr-item tags="a.der_vuohta.n"/>
      <attr-item tags="a.der_voete.n"/>
    </def-attr>

    <def-attr n="a_pron">
       <attr-item tags="pron.indef"/>
       <attr-item tags="pron.dem"/>
       <attr-item tags="pron.refl"/>
       <attr-item tags="pron.rel"/>
       <attr-item tags="pron.interr"/>
    </def-attr>

    <def-attr n="a_case">
       <attr-item tags="nom"/>
       <attr-item tags="acc"/>
       <attr-item tags="gen"/>
       <attr-item tags="com"/>
       <attr-item tags="ess"/>
       <attr-item tags="ill"/>
       <attr-item tags="loc"/>
       <attr-item tags="ine"/>
       <attr-item tags="ela"/>
       <attr-item tags="CD"/>
    </def-attr>

    <def-attr n="a_adj">
       <attr-item tags="a"/>
       <attr-item tags="a.ord"/>
       <attr-item tags="n"/>
    </def-attr>
   
    <def-attr n="a_verb">
       <attr-item tags="v"/>
       <attr-item tags="v.iv.der_goahti.v"/>
       <attr-item tags="v.tv.der_goahti.v"/>
    </def-attr>
 
    <def-attr n="a_trans">
       <attr-item tags="iv"/>
       <attr-item tags="tv"/>
    </def-attr>
 
    <def-attr n="a_qst">
       <attr-item tags="qst"/>
    </def-attr>

    <def-attr n="a_neg">
       <attr-item tags="neg"/>
    </def-attr>

    <def-attr n="a_indecl">
       <attr-item tags="indecl"/>
    </def-attr>


    <def-attr n="a_attr">
       <attr-item tags="attr"/>
    </def-attr>

    <def-attr n="a_conneg">
       <attr-item tags="conneg"/>
    </def-attr>

    <def-attr n="a_allegro">
       <attr-item tags="allegro"/>
    </def-attr>

    <def-attr n="a_mood">
       <attr-item tags="pot"/>
       <attr-item tags="ind"/>
       <attr-item tags="cond"/>
       <attr-item tags="imprt"/>
    </def-attr>

    <def-attr n="a_nbr">
       <attr-item tags="sg"/>
       <attr-item tags="pl"/>
       <attr-item tags="ND"/>
    </def-attr>

    <def-attr n="a_tense">
       <attr-item tags="prt"/>
       <attr-item tags="prs"/>
    </def-attr>

    <def-attr n="a_poss">
       <attr-item tags="pxsg1"/>
       <attr-item tags="pxsg2"/>
       <attr-item tags="pxsg3"/>
       <attr-item tags="pxdu1"/>
       <attr-item tags="pxdu2"/>
       <attr-item tags="pxdu3"/>
       <attr-item tags="pxpl1"/>
       <attr-item tags="pxpl2"/>
       <attr-item tags="pxpl3"/>
    </def-attr>


    <def-attr n="a_pers">
       <attr-item tags="sg1"/>
       <attr-item tags="sg2"/>
       <attr-item tags="sg3"/>
       <attr-item tags="du1"/>
       <attr-item tags="du2"/>
       <attr-item tags="du3"/>
       <attr-item tags="pl1"/>
       <attr-item tags="pl2"/>
       <attr-item tags="pl3"/>
    </def-attr>

    <def-attr n="a_degr">
       <attr-item tags="comp"/>
       <attr-item tags="superl"/>
    </def-attr>

    <def-attr n="a_deriv">
       <attr-item tags="der_at"/>
       <attr-item tags="der_laakan"/>
       <attr-item tags="der_goahti"/>
       <attr-item tags="der_gåete"/>
       <attr-item tags="der_l"/>
       <attr-item tags="der_ahtti"/>
       <attr-item tags="der_ahtje"/>
       <attr-item tags="der_vuohta"/>
       <attr-item tags="der_voete"/>
       <attr-item tags="attr.der_voete"/>
       <attr-item tags="der_lidh"/>
       <attr-item tags="der_d"/>
       <attr-item tags="der_didh"/>
    </def-attr>

    <def-attr n="a_foc">
      <attr-item tags="foc_ba"/>
      <attr-item tags="foc_ban"/>
      <attr-item tags="foc_bason"/>
      <attr-item tags="foc_bahan"/>
      <attr-item tags="foc_bahal"/>
      <attr-item tags="foc_beson"/>
      <attr-item tags="foc_behan"/>
      <attr-item tags="foc_behal"/>
      <attr-item tags="foc_bat"/>
      <attr-item tags="foc_be"/>
      <attr-item tags="foc_ge"/>
      <attr-item tags="foc_gen"/>
      <attr-item tags="foc_ges"/>
      <attr-item tags="foc_gis"/>
      <attr-item tags="foc_hal"/>
      <attr-item tags="foc_han"/>
      <attr-item tags="foc_naj"/>
      <attr-item tags="foc_son"/>
    </def-attr>

    <def-attr n="a_synlabel">
       <attr-item tags="@X"/>
       <attr-item tags="@HNOUN"/>
       <attr-item tags="@CNP"/>
       <attr-item tags="@CVP"/>
       <attr-item tags="@→CC"/>
       <attr-item tags="@N←"/>
       <attr-item tags="@→N"/>
       <attr-item tags="@←OBJ"/>
       <attr-item tags="@OBJ"/>
       <attr-item tags="@→Pron"/>
       <attr-item tags="@PCLE"/>
       <attr-item tags="@→A"/>
       <attr-item tags="@APP-N←"/>
       <attr-item tags="@OBJ→"/>
       <attr-item tags="@-F←OBJ"/>
       <attr-item tags="@SUBJ→"/>
       <attr-item tags="@←SUBJ"/>
       <attr-item tags="@SPRED→"/>
       <attr-item tags="@←SPRED"/>
       <attr-item tags="@\+FMAINV"/>
       <attr-item tags="@-FMAINV"/>
       <attr-item tags="@\+FAUXV"/>
       <attr-item tags="@-FAUXV"/>
       <attr-item tags="@A←"/>
       <attr-item tags="@COMP-CS←"/>
       <attr-item tags="@ADVL"/>
       <attr-item tags="@→ADVL"/>
       <attr-item tags="@←ADVL"/>
       <attr-item tags="@ADVL→"/>
       <attr-item tags="@HAB"/>
       <attr-item tags="@HAB→"/>
       <attr-item tags="@←HAB"/>
       <attr-item tags="@Num←"/>
       <attr-item tags="@→Num"/>
       <attr-item tags="@INTERJ"/>
       <attr-item tags="@PCLE"/>
       <attr-item tags="@OPRED→"/>
       <attr-item tags="@←OPRED"/>
       <attr-item tags="@→P"/>
       <attr-item tags="@P←"/>
       <attr-item tags="@-FSUBJ→"/>
       <attr-item tags="@-FOBJ→"/>
       <attr-item tags="@-F←OBJ"/>
       <attr-item tags="@-F←ADVL"/>
    </def-attr>
  

  
  </section-def-attrs>
  <section-def-vars>
    <def-var n="number"/>
    <def-var n="synlabel"/>
    <def-var n="poss"/>
    <def-var n="case"/>
    <def-var n="nmbr"/>
    <def-var n="main-verb-lemma"/>
  </section-def-vars>
  <section-def-lists>
    <def-list n="stative-verbs"><!--sme place-verbs, hope they work the same in sma -->
      <list-item v="ássat"/>
      <list-item v="orrut"/>
      <list-item v="veallát"/>
      <list-item v="čuožžut"/>
      <list-item v="čohkkát"/>
      <list-item v="čohkahit"/>
      <list-item v="buolvvastallat"/>
      <list-item v="buolvvastit"/>
      <list-item v="čippostallat"/>
      <list-item v="čuččodit"/>
      <list-item v="morihit"/>
      <list-item v="gohččát"/>
      <list-item v="gullát"/>
      <list-item v="morránit"/>
      <list-item v="orodit"/>
      <list-item v="stuorrut"/>
      <list-item v="veallahit"/>
      <list-item v="eallit"/>
    </def-list>
    <def-list n="movement-verbs">
      <list-item v="boahtit"/>
    </def-list>
  </section-def-lists>
  <section-def-macros>

    <def-macro n="convert-deriv1" npar="1">
      <choose>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_at"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="der_laakan"/></let>
        </when>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_vuohta"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="attr.der_voete"/></let> <!-- FIXME: Why 'attr' ? :( ~FMT -->
        </when>
      </choose>
    </def-macro>  

    <def-macro n="proc-syn-foc-qst1" npar="1">
      <choose>
        <when>
          <test>
            <or>
               <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@-FMAINV"/></equal>
               <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@\+FMAINV"/></equal>
            </or>
          </test>
          <let><var n="main-verb-lemma"/><clip pos="1" side="sl" part="lem"/></let>
        </when>
      </choose>

          <!-- Set the +Allegro tag to nothing for now -->
          <let><clip pos="1" side="tl" part="a_allegro"/><lit v=""/></let>

          <call-macro n="convert-deriv1">
            <with-param pos="1"/>
          </call-macro>
          <!-- If the word has a syntactic function label, set the variable with that 
               label, if not, set the label to @X. 
               Remove question particle. -->
          <let><var n="synlabel"/><lit-tag v="@X"/></let>
          <choose>
            <when>
              <test>
                <not><equal><clip pos="1" side="tl" part="a_synlabel"/><lit v=""/></equal></not>
              </test>
              <let><var n="synlabel"/><clip pos="1" side="sl" part="a_synlabel"/></let>
            </when>
          </choose>
          <let><clip pos="1" side="tl" part="a_synlabel"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_qst"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_foc"/><lit v=""/></let> <!-- Don't output focus particles -->
    </def-macro>

    <def-macro n="proc-syn-foc-qst2" npar="2">
      <call-macro n="proc-syn-foc-qst1">
        <with-param pos="2"/>
      </call-macro>
      <call-macro n="proc-syn-foc-qst1">
        <with-param pos="1"/>
      </call-macro>
      <!-- Sometimes a combintion of syntactic labels results in a new label for the chunk -->
      <choose>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@-FMAINV"/></equal>
              <equal><clip pos="2" side="sl" part="a_synlabel"/><lit-tag v="@+FAUXV"/></equal>
            </and>
          </test>
          <let><var n="synlabel"/><lit-tag v="@+FMAINV"/></let>
        </when>
      </choose>
    </def-macro>

    <def-macro n="proc-syn-foc-qst3" npar="2">
      <call-macro n="proc-syn-foc-qst1">
        <with-param pos="3"/>
      </call-macro>
      <call-macro n="proc-syn-foc-qst1">
        <with-param pos="2"/>
      </call-macro>
      <call-macro n="proc-syn-foc-qst1">
        <with-param pos="1"/>
      </call-macro>
    </def-macro>

    <def-macro n="convert-case-nbr-poss1" npar="1">
      <let><var n="poss"/><lit-tag v="PX"/></let>
      <choose>
        <when>
          <test>
            <not><equal><clip pos="1" side="sl" part="a_poss"/><lit v=""/></equal></not>
          </test>
          <let><var n="poss"/><clip pos="1" side="sl" part="a_poss"/></let>
        </when>
      </choose>

      <choose> <!-- For seammá:seamma -->
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="tl" part="a_indecl"/><lit-tag v="indecl"/></equal>
              <not><equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="a"/></equal></not>
            </and>
          </test>
          <let><var n="case"/><lit v=""/></let>
          <let><var n="nmbr"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_attr"/><lit v=""/></let>
        </when>
      </choose>

      <choose>
        <when>
          <test>
            <not><equal><clip pos="1" side="sl" part="a_pron"/><lit-tag v="pron.refl"/></equal></not>
          </test>
          <let><clip pos="1" side="tl" part="a_poss"/><lit v=""/></let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <or>
              <and><equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal>
                   <or>
                   <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@HAB"/></equal>
                   <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@HAB→"/></equal>
                   <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@←HAB"/></equal></or>
              </and>
              <in caseless="yes"><var n="main-verb-lemma"/><list n="stative-verbs"/></in>
            </or>
          </test>
          <let><clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/></let>
        </when>
        <when>
          <test>
            <and>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal>
              <in caseless="yes"><var n="main-verb-lemma"/><list n="movement-verbs"/></in>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_case"/><lit-tag v="ela"/></let>
        </when>
        <when>
          <test>
            <and>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal>
            <not><in caseless="yes"><var n="main-verb-lemma"/><list n="movement-verbs"/></in></not>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_case"/><lit-tag v="ine"/></let>
        </when>

      </choose>

      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="ND"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
        </when>
      </choose>

      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="CD"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/></let>
        </when>
      </choose>

      <choose>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_synlabel"/><lit-tag v="@←SPRED"/></equal>
              <equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="a"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
        </when>
      </choose>

      <choose> <!-- For adjectives -->
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="a"/></equal>
              <not><equal><clip pos="1" side="sl" part="a_nbr"/><lit v=""/></equal></not>
              <not><equal><clip pos="1" side="sl" part="a_case"/><lit v=""/></equal></not>
              <equal><clip pos="1" side="tl" part="a_indecl"/><lit-tag v="indecl"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
          <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="whole"/>
              <lit-tag v="attr"/>
            </concat>
          </let>
        </when>
      </choose>

      <let><clip pos="1" side="tl" part="a_indecl"/><lit v=""/></let>

    </def-macro>

    <def-macro n="convert-case-nbr-poss2" npar="2">
      <let><var n="case"/><lit v=""/></let>
      <let><var n="nmbr"/><lit v=""/></let>
      <call-macro n="convert-case-nbr-poss1"> 
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when> 
          <test>
            <and>
            <equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="a"/></equal>
            <not>
            <and>
            <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="n"/></equal>
            <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/></equal></and></not></and>
          </test>
          <let><var n="case"/><clip pos="1" side="tl" part="a_case"/></let>
          <let><var n="nmbr"/><clip pos="1" side="tl" part="a_nbr"/></let>
        </when>
        <otherwise>
          <let><var n="case"/><clip pos="2" side="tl" part="a_case"/></let>
          <let><var n="nmbr"/><clip pos="2" side="tl" part="a_nbr"/></let>
        </otherwise>
      </choose>
      <call-macro n="convert-case-nbr-poss1"> 
        <with-param pos="2"/>
      </call-macro>
    </def-macro>


    <def-macro n="convert-case-nbr-poss3" npar="3">
      <let><var n="case"/><lit v=""/></let>
      <let><var n="nmbr"/><lit v=""/></let>
      <call-macro n="convert-case-nbr-poss1"> 
        <with-param pos="1"/>
      </call-macro>
      <let><var n="case"/><clip pos="1" side="tl" part="a_case"/></let>
      <let><var n="nmbr"/><clip pos="1" side="tl" part="a_nbr"/></let>
      <call-macro n="convert-case-nbr-poss1"> 
        <with-param pos="2"/>
      </call-macro>
      <call-macro n="convert-case-nbr-poss1"> 
        <with-param pos="3"/>
      </call-macro>
    </def-macro>

    <def-macro n="convert-compounds1" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_cmp"/><lit-tag v="sgcmp"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_cmp"/><lit-tag v="sgnomcmp"/></let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="tl" part="a_adj"/><lit-tag v="a"/></equal>
              <not><equal><clip pos="1" side="tl" part="a_cmp"/><lit v=""/></equal></not>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_cmp"/><lit-tag v="attr"/></let>
        </when>

      </choose>
    </def-macro>  

    <def-macro n="convert-compounds2" npar="2">
      <call-macro n="convert-compounds1">
        <with-param pos="1"/>
      </call-macro>
      <call-macro n="convert-compounds1">
        <with-param pos="2"/>
      </call-macro>
    </def-macro>  


    <def-macro n="convert-compounds3" npar="3">
      <call-macro n="convert-compounds1">
        <with-param pos="1"/>
      </call-macro>
      <call-macro n="convert-compounds1">
        <with-param pos="2"/>
      </call-macro>
      <call-macro n="convert-compounds1">
        <with-param pos="3"/>
      </call-macro>
    </def-macro>  

    <def-macro n="convert-verb-deriv1" npar="1">

      <choose>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_d"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="der_didh"/></let>
        </when>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_l"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="der_lidh"/></let>
        </when>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_ahtti"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="der_ahtje"/></let>
        </when>
        <when>
          <test>
               <equal><clip pos="1" side="sl" part="a_deriv"/><lit-tag v="der_goahti"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_deriv"/><lit-tag v="der_gåete"/></let>
        </when>
      </choose>
    </def-macro>  


    

  </section-def-macros>
  <section-rules>

    <!-- SECTION: Nominal groups -->

    <rule comment="REGLA: pron-pers">
      <pattern>
        <pattern-item n="pron-pers"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron-pers" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pron-refl">
      <pattern>
        <pattern-item n="pron-refl"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="refl" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="REFL"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: pron-rel">
      <pattern>
        <pattern-item n="pron-rel"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="rel" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="REL"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: pron-dem">
      <pattern>
        <pattern-item n="pron-dem"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron-dem" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: pron-indef">
      <pattern>
        <pattern-item n="pron-indef"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron-indef" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>




    <rule comment="REGLA: num">
      <pattern>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="num" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: n-cmp n-cmp n-cmp n">
      <pattern>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="convert-compounds3">
          <with-param pos="3"/>
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <mlu>
              <lu>
                <clip pos="1" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="4" side="tl" part="whole"/>
              </lu>
            </mlu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: n-cmp n-cmp n">
      <pattern>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="convert-compounds2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <mlu>
              <lu>
                <clip pos="1" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
            </mlu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: n-cmp n">
      <pattern>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="convert-compounds1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <mlu>
              <lu>
                <clip pos="1" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            </mlu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: n">
      <pattern>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: adj-rdep n">
      <pattern>
        <pattern-item n="adj-rdep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="a-n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <var n="nmbr"/>
              <var n="case"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: n num-ldep">
      <pattern>
        <pattern-item n="n"/>
        <pattern-item n="num-ldep"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="n-num" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: n-prop-pers">
      <pattern>
        <pattern-item n="n-prop-pers"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="prop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pron-attr n-cmp n">
      <pattern>
        <pattern-item n="pron-attr"/>
        <pattern-item n="n-cmp"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="convert-compounds1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="attr-cmp-n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_pron"/>
              <var n="nmbr"/>
              <var n="case"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <mlu>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
            </mlu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: pron-attr pron-attr n">
      <pattern>
        <pattern-item n="pron-attr"/>
        <pattern-item n="pron-attr"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst3">
          <with-param pos="3"/>
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss3">
          <with-param pos="3"/>
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="attr-attr-n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_pron"/>
              <var n="nmbr"/>
              <var n="case"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_pron"/>
              <var n="nmbr"/>
              <var n="case"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pron-attr n">
      <pattern>
        <pattern-item n="pron-attr"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="attr-n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><var n="poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_pron"/>
              <var n="nmbr"/>
              <var n="case"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <!-- SECTION: Verbal groups -->

    <rule comment="REGLA: ii">
      <pattern>
        <pattern-item n="ii"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="ii" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><clip pos="1" side="tl" part="a_mood"/></tag>
              <tag><lit-tag v="XD"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_trans"/>
              <clip pos="1" side="tl" part="a_neg"/>
              <clip pos="1" side="tl" part="a_mood"/>
              <lit-tag v="4"/>
              <clip pos="1" side="tl" part="a_pers"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: conneg">
      <pattern>
        <pattern-item n="conneg"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="conneg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
              <tag><clip pos="1" side="tl" part="a_mood"/></tag>
              <tag><clip pos="1" side="tl" part="a_tense"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_trans"/>
              <clip pos="1" side="tl" part="a_conneg"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ii conneg">
      <pattern>
        <pattern-item n="ii"/>
        <pattern-item n="conneg"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="ii-conneg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_trans"/>
              <clip pos="1" side="tl" part="a_neg"/>
              <clip pos="1" side="tl" part="a_mood"/>
              <clip pos="2" side="tl" part="a_tense"/>
              <clip pos="1" side="tl" part="a_pers"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="a_trans"/>
              <clip pos="2" side="tl" part="a_conneg"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: verb-fin">
      <pattern>
        <pattern-item n="verb-fin"/>
      </pattern>
      <action>
        <call-macro n="convert-verb-deriv1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <let><clip pos="1" side="tl" part="a_mood"/><lit-tag v="ind"/></let>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <!--<var n="main-verb-lemma"/>-->
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: leat-fin verb-prfprc">
      <pattern>
        <pattern-item n="leat-fin"/>
        <pattern-item n="verb-prfprc"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-verb-deriv1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
<!--
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
-->
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: leat-fin adv verb-prfprc">
      <pattern>
        <pattern-item n="leat-fin"/>
        <pattern-item n="adv"/>
        <pattern-item n="verb-prfprc"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst3">
          <with-param pos="3"/>
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-verb-deriv1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: verb-inf">
      <pattern>
        <pattern-item n="verb-inf"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-verb-deriv1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="inf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: verb-prfprc">
      <pattern>
        <pattern-item n="verb-prfprc"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-verb-deriv1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="prfprc" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: verb-actio">
      <pattern>
        <pattern-item n="verb-actio"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="actio" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_trans"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: verb-imprt">
      <pattern>
        <pattern-item n="verb-imprt"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="imprt" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <!-- SECTION: Adjective groups -->


    <rule comment="REGLA: adj">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="convert-case-nbr-poss1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- SECTION: Adverbial groups -->

    <rule comment="REGLA: adv">
      <pattern>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADV"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- SECTION: Adpositions -->

    <rule comment="REGLA: pr">
      <pattern>
        <pattern-item n="pr"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pr" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PREP"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: po">
      <pattern>
        <pattern-item n="po"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="po" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="POST"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- SECTION: Conjunctions -->

    <rule comment="REGLA: cs">
      <pattern>
        <pattern-item n="cs"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="cs" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CS"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: cc">
      <pattern>
        <pattern-item n="cc"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="cc" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CC"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <!-- SECTION: Miscellaneous -->

    <rule comment="REGLA: sent">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <call-macro n="proc-syn-foc-qst1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
              <tag><var n="synlabel"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

  </section-rules>
</transfer>
