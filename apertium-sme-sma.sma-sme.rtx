! sme
! ^Mun<prn><pers><p1><sg><nom><@SUBJ→>/Mån<prn><pers><p1><sg><nom><@SUBJ→>$
! ^oaidnit<vblex><tv><indic><pres><p1><sg><@+FMAINV>/vuojnnet<vblex><tv><indic><pres><p1><sg><@+FMAINV>$
! ^don<prn><pers><p2><sg><gen><@→N>/dån<prn><pers><p2><sg><gen><@→N>$
! ^viellja<n><sem_hum><sg><acc><@←OBJ>/viellja<n><sem_hum><sg><acc><@←OBJ>$
! smj
! Mån vuojnáv vieljat.
! "<Mån>"
!	"mån" prn pers p1 sg nom
! "<vuojnáv>"
! 	"vuojnnet" vblex tv indic pres p1 sg @+FMAINV MAP:3256
! "<vieljat>"
!	"viellja" n sem_hum sg acc px2sg
 
 sem = sem_hum sem_food ;
 number = sg pl ;
 case = acc nom gen loc ine ela ;
 poss = ("" "") px1sg px1du px1pl px2sg px2du px2pl px3sg  
 px3du px3pl ;
 person = p1 p2 p3 ;
 pron_type = pers refl dem indef recipr rel ;
 attr = attr ;
 transitivity = tv iv ;
 mood = indic imp ;
 tense = pres pret ;
 person_number = "p1.sg" "p1.du" "p1.pl"
                 "p2.sg" "p2.du" "p2.pl"
                 "p3.sg" "p3.du" "p3.pl" ;
 
 person_number > poss : "p1.sg" px1sg, "p1.du" px1du, "p1.pl" px1pl,
                        "p2.sg" px2sg, "p2.du" px2du, "p2.pl" px2pl,
                        "p3.sg" px3sg, "p3.du" px3du, "p3.pl" px3pl ;
! a rule for converting person+number tag pairs to possessive tags

!  this applies if you write poss=1.person_number or 1.person_number>poss
! "" because these are pairs instead of single tags

 
 n: _.number.case.poss ;
 adj_attr: _.attr ;
 adj_pred: _.number.case ;
 
 adj: (if (1.attr = attr) 1(adj_attr)
       else 1(adj_pred)) ;
       
 cnjcoo: _ ;
 prn: _.pron_type.person.number.case ; ! mun<prn><pers><p1><sg><loc>
 NP: _.number.case.poss.sem ;
 ! <vblex><tv><indic><pres><p3><pl>
 vblex: _.transitivity.mood.tense.person.number ;
 VP: _ ;
 S: _ ;

 
! p1_or_p2 = p1 p2 ;
! NP -> prn.pers.[p1_or_p2].*.gen %NP
!       { %2[poss=1.person_number]
!        ! the following is equivalent
!        ! 2[poss=(if (1.person = p1 and 1.number = sg) px1sg
!        !         if (1.person = p1 and 1.number = du) px1du
!        !         if (1.person = p1 and 1.number = pl) px1pl
!        !         if (1.person = p2 and 1.number = sg) px2sg
!        !         if (1.person = p2 and 1.number = du) px2du
!        !         if (1.person = p2 and 1.number = pl) px2pl
!        !         if (1.person = p3 and 1.number = sg) px3sg
!        !         if (1.person = p3 and 1.number = du) px3du
!        !         if (1.person = p3 and 1.number = pl) px3pl
!        !        )]
!       } ;

!  SMA -> SME 
!   SOV     SVO 
! maanah (subj) laejpieh (object- indef) byöpemdieh (verbal) -> mánát (subjekt) borret (verbl) láibbiid (obj)
! maanah (subj) laejpide (object- def) byöpemdieh (verbal). ->  mánát (subjekt)  láibbiid (obj) borret (verbl)

VP -> NP.*.nom vblex { 2 _ 1[case=acc] } ;
VP -> NP.*.acc vblex.tv { 1 _ 2 } ;


 NP -> %n { %1[poss=$poss] } ;
 NP -> "attr adj" adj.attr %NP { 1 _ %2[poss=$poss] } ;
 NP -> %NP cnjcoo NP { %1 _ 2 _ 3[case=$case] } ;
 NP -> %prn { %1 } ;  ! % = NP får taggene fra pronomene
 
 
! VP -> vblex.tv NP !  hvis transitivt verb, kjør OV - verb + nomen 
!       {
!         2[case=(if (2.number = pl and 2.case = acc) nom   ! case som er acc, blir nominativ hvis nummer er plural
!                 if (2.sem = sem_food and 2.case = loc) ela ! hvis sem_taggen er food og case er loc - gir output elativ.
!                 else 2.case)] ! ellers gi samme case som er i input.
!         _ 1
!       } ;
!       
! VP -> vblex.iv NP  ! 
! 
!       { 1 _ 2 } ;
! 
!   
! VP -> NP vblex.tv { 1 _ 2 } ; ! VO gir OV som output
! 


! sma - Mov leah vïellh  -> Gánddas leat vieljat 
!       Mov lea vïelle   -> Gánddas lea viellja  

S -> NP.*.gen lea@vblex.iv.indic NP { 1[case=loc] _ 2 _ 3 } ;

